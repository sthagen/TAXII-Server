openapi: 3.0.1
info:
  title: TAXII Client API
  description: TAXII Client API (2.1)
  contact:
    name: StephenOTT
    url: http://github.com/stephenott/TAXII-Server
    email: http://github.com/stephenott/TAXII-Server
  license:
    name: --
    url: http://github.com/stephenott
  version: "0.5"
paths:
  /{apiRoot}:
    get:
      summary: Get information about a specific API Root
      description: This Endpoint provides general information about an API Root, which
        can be used to help users and clients decide whether and how they want to
        interact with it. Multiple API Roots ​MAY​ be hosted on a single TAXII Server.
        Often, an API Root represents a single trust group.
      operationId: getApiRoot
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/api-root'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The Discovery service is not found, or the client does not
            have access to the resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/status/{statusId}:
    get:
      summary: Get status information for a specific status ID
      description: This Endpoint provides information about the status of a previous
        request. In TAXII 2.1, the only request that can be monitored is one to add
        objects to a Collection. It is typically used by TAXII Clients to monitor
        a POST request that they made in order to take action when it is complete.
      operationId: getStatus
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: statusId
        in: path
        description: the ​identifier​ of the status message being requested
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/status'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root or Status ID are not found, or the client does
            not have access to the resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections:
    get:
      summary: Get information about all collections
      description: This Endpoint provides information about the Collections hosted
        under this API Root. This is similar to the response to get a Collection,
        but rather than providing information about one Collection it provides information
        about all of the Collections. Most importantly, it provides the Collection's
        ​id​, which is used to request objects or manifest entries from the Collection.
      operationId: getCollections
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/collections'
        400:
          description: The server did not understand the request
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this collections resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root is not found, or the client does not have access
            to the collections resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections/{collectionId}:
    get:
      summary: Get information about a specific collection
      description: This Endpoint provides general information about a Collection,
        which can be used to help users and clients decide whether and how they want
        to interact with it. For example, it will tell clients what it's called and
        what permissions they have to it.
      operationId: getCollection
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/collections'
        400:
          description: The server did not understand the request
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this collections resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root or Collection ID are not found, or the client
            does not have access to the collection resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections/{collectionId}/manifest:
    get:
      summary: Get manifest information about the contents of a specific collection
      description: This Endpoint retrieves a manifest about the objects in a Collection.
        It supports filtering identical to the get objects Endpoint but rather than
        returning the object itself it returns metadata about the object. It can be
        used to retrieve metadata to decide whether it's worth retrieving the actual
        objects.
      operationId: getCollectionManifest
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: added_after
        in: query
        description: a single timestamp
        schema:
          type: string
      - name: limit
        in: query
        description: a single integer
        schema:
          type: integer
      - name: next
        in: query
        description: a single string
        schema:
          type: string
      - name: match[id]
        in: query
        description: an id(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[type]
        in: query
        description: the type(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[version]
        in: query
        description: the version(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[spec_version]
        in: query
        description: the specification version(s)
        schema:
          type: array
          items:
            type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
            X-TAXII-Date-Added-First:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
            X-TAXII-Date-Added-Last:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/manifest'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this manifest resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root or Collection ID are not found, or the client
            does not have access to the manifest resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections/{collectionId}/objects:
    get:
      summary: Get all objects from a collection
      description: This Endpoint retrieves objects from a Collection. Clients can
        search for objects in the Collection, retrieve all objects in a Collection,
        or paginate through objects in the Collection.
      operationId: getCollectionObjects
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: added_after
        in: query
        description: a single timestamp
        schema:
          type: string
      - name: limit
        in: query
        description: a single integer
        schema:
          type: integer
      - name: next
        in: query
        description: a single string
        schema:
          type: string
      - name: match[id]
        in: query
        description: an id(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[type]
        in: query
        description: the type(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[version]
        in: query
        description: the version(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[spec_version]
        in: query
        description: the specification version(s)
        schema:
          type: array
          items:
            type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
            X-TAXII-Date-Added-First:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
            X-TAXII-Date-Added-Last:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/envelop'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this objects resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root or Collection ID are not found, or the client
            does not have access to the objects resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
    post:
      summary: Add a new object to a specific collection
      description: This Endpoint adds objects to a Collection.
      operationId: addCollectionObjects
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      - name: Content-Type
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/envelop'
        required: true
      responses:
        202:
          description: The request was successful accepted
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/envelop'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to write to this objects resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root or Collection ID are not found, or the client
            can not write to this objects resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        413:
          description: The POSTed payload exceeds the max_content_length of the API
            Root
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        415:
          description: The client attempted to POST a payload with a content type
            the server does not support
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        422:
          description: The object type of version is not supported of could not be
            processed.  This can happen, for example, when sending a version of STIX
            that this TAXII Server does not support and cannot process, when sending
            a malformed body, or other unprocessable content
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections/{collectionId}/objects/{objectId}:
    get:
      summary: Get a specific object from a collection
      description: This Endpoint gets an object from a Collection by its ​id​. It
        can be thought of as a search where the match[id]​ parameter is set to the
        ​{object-id}​ in the path. For STIX 2 objects, the ​{object-id}​ ​MUST be
        the STIX ​id​.
      operationId: getCollectionObject
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: objectId
        in: path
        description: the ID of the object being requested
        required: true
        schema:
          type: string
      - name: added_after
        in: query
        description: a single timestamp
        schema:
          type: string
      - name: limit
        in: query
        description: a single integer
        schema:
          type: integer
      - name: next
        in: query
        description: a single string
        schema:
          type: string
      - name: match[version]
        in: query
        description: the version(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[spec_version]
        in: query
        description: the specification version(s)
        schema:
          type: array
          items:
            type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
            X-TAXII-Date-Added-First:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
            X-TAXII-Date-Added-Last:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/envelop'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this objects resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root, Collection ID and/or Object ID are not found,
            or the client does not have access to the object resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections/{collectionId}/objects/{objectId}}:
    delete:
      summary: Delete a specific object from a collection
      description: This Endpoint deletes an object from a Collection by its ​id​.
        For STIX 2 objects, the ​{object-id}​ ​MUST be the STIX ​id​.
      operationId: deleteCollectionObject
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: objectId
        in: path
        description: the ID of the object being deleted
        required: true
        schema:
          type: string
      - name: match[version]
        in: query
        description: the version(s) of an object
        schema:
          type: array
          items:
            type: string
      - name: match[spec_version]
        in: query
        description: the specification version(s)
        schema:
          type: array
          items:
            type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          content:
            application/taxii+json;version=2.1: {}
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client has access to the object, but not to delete it
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root, Collection ID and/or Object ID are not found,
            or the client does not have access to the object
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /{apiRoot}/collections/{collectionId}/objects/{objectId}/versions:
    get:
      summary: Get a list of object versions from a collection
      description: This Endpoint retrieves a list of one or more versions of an object
        in a Collection. This list can be used to decide whether it's worth retrieving
        the actual objects, or if new versions have been added. If a STIX object is
        not versioned (and therefore does not have a modified timestamp), the server
        ​MUST ​use created​ timestamp.
      operationId: getCollectionObjectVersions
      parameters:
      - name: apiRoot
        in: path
        description: the base URL of the API Root
        required: true
        schema:
          type: string
      - name: collectionId
        in: path
        description: the ​identifier​ of the Collection being requested
        required: true
        schema:
          type: string
      - name: objectId
        in: path
        description: the ID of the object being requested
        required: true
        schema:
          type: string
      - name: added_after
        in: query
        description: a single timestamp
        schema:
          type: string
      - name: limit
        in: query
        description: a single integer
        schema:
          type: integer
      - name: next
        in: query
        description: a single string
        schema:
          type: string
      - name: match[spec_version]
        in: query
        description: the specification version(s)
        schema:
          type: array
          items:
            type: string
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
            X-TAXII-Date-Added-First:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
            X-TAXII-Date-Added-Last:
              description: timestamp
              required: true
              schema:
                $ref: '#/components/schemas/Timestamp'
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/versions'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this objects resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The API Root, Collection ID and/or Object ID are not found,
            or the client does not have access to the object resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
  /taxii2:
    get:
      summary: Get information about the TAXII Server and any advertised API Roots
      description: This Endpoint provides general information about a TAXII Server,
        including the advertised API Roots. It's a common entry point for TAXII Clients
        into the data and services provided by a TAXII Server.
      operationId: discovery
      parameters:
      - name: Accept
        in: header
        required: false
        schema:
          type: string
          default: application/taxii+json;version=2.1
          enum:
          - application/taxii+json;version=2.1
          - application/taxii+json;version=2.0
          - application/taxii+json
      responses:
        200:
          description: The request was successful
          headers:
            Content-Type:
              description: Always value of application/taxii+json;version=2.1
              required: true
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/discovery'
        400:
          description: The server did not understand the request or filter parameters
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        401:
          description: The client needs to authenticate
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        403:
          description: The client does not have access to this resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        404:
          description: The Discovery service is not found, or the client does not
            have access to the resource
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
        406:
          description: The media type provided in the Accept header is invalid
          content:
            application/taxii+json;version=2.1:
              schema:
                $ref: '#/components/schemas/error'
      security:
      - basicAuth: []
components:
  schemas:
    TaxiiMediaType:
      type: string
      description: A Media Type that is for TAXII content such as application/taxii+json;version=2.1
      format: taxii-media-type
      example: application/taxii+json;version=2.1
    api-root:
      type: object
      properties:
        title:
          type: string
          description: A human readable plain text name used to identify this API
            instance.
        description:
          type: string
          description: A human readable plain text description for this API Root.
          nullable: true
        versions:
          uniqueItems: true
          type: array
          description: The list of TAXII versions that this API Root is compatible
            with. The values listed in this property ​MUST match the media types defined
            in Section​ 1​ .6.8.1​ and MUST​ include the optional version parameter.
            A value of "​application/taxii+json;version=2.1"​ M​UST​ be included in
            this list to indicate conformance with this specification.
          items:
            $ref: '#/components/schemas/TaxiiMediaType'
        max_content_length:
          type: integer
          description: The maximum size of the request body in octets (8-bit bytes)
            that the server can support. The value of the max_content_length​ ​MUST​
            be a positive ​integer greater than zero. This applies to requests only
            and is determined by the server. Requests with total body length values
            smaller than this value ​MUST NOT​ result in an HTTP 413 (Request Entity
            Too Large) response. If for example, the server supported 100 MB of data,
            the value for this property would be determined by 100*1024*1024 which
            equals 104,857,600. This property contains useful information for the
            client when it POSTs requests to the Add Objects endpoint.
          format: int32
      description: The ​api-root​ resource contains general information about the
        API Root, such as a human-readable title​ and ​description​, the TAXII ​versions​
        it supports, and the maximum size (​max_content_length​) of the content body
        it will accept in a PUT or POST request.
    Dictionary:
      type: object
      properties:
        dictionary:
          type: object
          additionalProperties: true
      description: TAXII Dictionary
    error:
      type: object
      properties:
        title:
          type: string
          description: A human readable plain text title for this error.
        description:
          type: string
          description: A human readable ​plain text​ description that gives details
            about the error or problem that was encountered by the application.
          nullable: true
        error_id:
          type: string
          description: An identifier for this particular error instance. A TAXII Server
            might choose to assign each error occurrence its own identifier in order
            to facilitate debugging.
          nullable: true
        error_code:
          type: string
          description: The error code for this error type. A TAXII Server might choose
            to assign a common error code to all errors of the same type. Error codes
            are application-specific and not intended to be meaningful across different
            TAXII Servers​.
          nullable: true
        http_status:
          type: string
          description: The HTTP status code applicable to this error. If this property
            is provided it ​MUST​ match the HTTP status code found in the HTTP header.
          nullable: true
        external_details:
          type: string
          description: A URL that points to additional details. For example, this
            could be a URL pointing to a knowledge base article describing the error
            code. Absence of this property indicates that there are no additional
            details.
          nullable: true
        details:
          $ref: '#/components/schemas/Dictionary'
      description: The ​error​ message is provided by TAXII Servers in the response
        body when returning an HTTP error status and contains more information describing
        the error, including a human-readable ​title​ and description​, an ​error_code​
        and ​error_id​, and a ​details​ structure to capture further structured information
        about the error. All of the properties are application-specific, and clients
        shouldn't assume consistent meaning across TAXII Servers even if the codes,
        IDs, or titles are the same.
    Identifier:
      type: string
      format: uuid
    RequestStatus:
      type: string
      enum:
      - COMPLETE
      - PENDING
    Timestamp:
      type: string
      format: date-time
    status-details:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        version:
          $ref: '#/components/schemas/Timestamp'
        message:
          type: string
          description: A message indicating more information about the object being
            created, its pending state, or why the object failed to be created.
          nullable: true
      description: This type represents an object that was added, is pending, or not
        added to the Collection. It contains the id​ and ​version​ of the object along
        with a ​message​ describing any details about its status.
    status:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        status:
          $ref: '#/components/schemas/RequestStatus'
        request_timestamp:
          $ref: '#/components/schemas/Timestamp'
        totalCount:
          type: integer
          description: The total number of objects that were in the request, which
            would be the number of objects in the ​envelope​. The value of the ​total_count
            MUST​ be a positive ​integer​ greater than or equal to zero. If this property
            has a value of 0, then the TAXII Server has not yet started processing
            the request.
          format: int32
        success_count:
          type: integer
          description: The number of objects that were successfully created. The value
            of the ​success_count​ ​MUST be a positive ​integer​ greater than or equal
            to zero.
          format: int32
        successes:
          type: array
          description: A list of objects that was successfully processed.
          nullable: true
          items:
            $ref: '#/components/schemas/status-details'
        failure_count:
          type: integer
          description: The number of objects that failed to be created. The value
            of the ​failure_count​ ​MUST​ be a positive ​integer​ greater than or
            equal to zero.
          format: int32
        failures:
          type: array
          description: A list of objects that was not successfully processed.
          nullable: true
          items:
            $ref: '#/components/schemas/status-details'
        pending_count:
          type: integer
          description: The number of objects that have yet to be processed. The value
            of the ​pending_count MUST​ be a positive ​integer​ greater than or equal
            to zero.
          format: int32
        pendings:
          type: array
          description: A list of objects that have yet to be processed.
          nullable: true
          items:
            $ref: '#/components/schemas/status-details'
      description: The status resource represents information about a request to add
        objects to a Collection. It contains information about the status of the request,
        such as whether or not it's completed (​status​) and ​MAY contain the status
        of individual objects within the request (i.e. whether they are still pending,
        completed and failed, or completed and succeeded).
    collection:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        title:
          type: string
          description: A human readable plain text title used to identify this Collection.
        description:
          type: string
          description: A human readable plain text description for this Collection.
          nullable: true
        alias:
          type: string
          description: A human readable collection name that can be used on systems
            to alias a collection ID. This could be used by organizations that want
            to preconfigure a known collection of data, regardless of the underlying,
            collection ID that is configured on a specific implementations.  If defined,
            the alias ​MUST​ be unique within a single api-root on a single TAXII
            server. There is no guarantee that an alias is globally unique across
            api-roots or TAXII server instances.
          nullable: true
        can_read:
          type: boolean
          description: Indicates if the requester can read (i.e., GET) objects from
            this Collection. If​ t​ rue​,​ users are allowed to access the ​Get Objects​,
            ​Get an Object​, or G​ et Object Manifests​ endpoints for this Collection.
            If​ f​ alse​, ​users are not allowed to access these endpoints.
        can_write:
          type: boolean
          description: Indicates if the requester can write (i.e., POST) objects to
            this Collection. If​ ​true​,​ users are allowed to access the ​Add Objects​
            endpoint for this Collection. If​ ​false​, users are not allowed to access
            this endpoint.
        media_types:
          type: array
          description: A list of supported media types for Objects in this Collection.
            Absence of this property is equivalent to a single-value list containing
            "​application/stix+json"​. This list ​MUST​ describe all media types that
            the Collection can store.
          items:
            $ref: '#/components/schemas/TaxiiMediaType'
      description: The ​collection​ resource contains general information about a
        Collection, such as its ​id​, a human-readable ​title​ and ​description​,
        an optional list of supported ​media_types​ (representing the media type of
        objects can be requested from or added to it), and whether the TAXII Client,
        as authenticated, can get objects from the Collection and/or add objects to
        it.
    collections:
      type: object
      properties:
        collections:
          uniqueItems: true
          type: array
          description: A list of Collections. If there are no Collections in the list,
            this key ​MUST​ be omitted, and the response is an empty object. The ​collection​
            resource is defined in section ​5.2.1​.
          items:
            $ref: '#/components/schemas/collection'
      description: The ​collections​ resource is a simple wrapper around a list of
        ​collection​ resources.
    StixMediaType:
      type: string
      description: A Media Type that is for STIX content such as application/stix+json;version=2.1
      format: stix-media-type
      example: application/stix+json;version=2.1
    manifest-record:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        date_added:
          $ref: '#/components/schemas/Timestamp'
        version:
          $ref: '#/components/schemas/Timestamp'
        media_type:
          $ref: '#/components/schemas/StixMediaType'
      description: The ​manifest-record​ type captures metadata about a single version
        of an ​object​, indicated by the ​id property. The metadata includes information
        such as when that version of the object was added to the Collection, the version
        of the object itself, and the media type that this specific version of the
        object is available in.
    manifest:
      type: object
      properties:
        more:
          type: boolean
          description: This property identifies if there is more content available
            based on the search criteria. The absence of this property means the value
            is false​.
        objects:
          uniqueItems: true
          type: array
          description: The list of manifest entries for objects returned by the request.
            If there are no ​manifest-record items in the list, this key ​MUST​ be
            omitted, and the response is an empty object.
          items:
            $ref: '#/components/schemas/manifest-record'
      description: The ​manifest​ resource is a simple wrapper around a list of ​manifest-record​
        items.
    stix-object:
      type: object
      description: A STIX Object
    envelop:
      type: object
      properties:
        more:
          type: boolean
          description: This property identifies if there is more content available
            based on the search criteria. The absence of this property means the value
            is false.
        next:
          type: string
          description: This property identifies the server provided value of the next
            record or set of records in the paginated data set. This property ​MAY​
            be populated if the ​more​ property is set to ​true.​
          nullable: true
        objects:
          uniqueItems: true
          type: array
          description: This property contains one or more STIX Objects. Objects in
            this list MUST be a STIX Object (e.g., SDO, SCO, SRO, Language Content
            object, or a Marking Definition object).
          items:
            $ref: '#/components/schemas/stix-object'
      description: The envelope is a simple wrapper for STIX 2 content. When returning
        STIX 2 content in a TAXII response the HTTP root object payload ​MUST​ be
        an ​envelope​. This specification does not define any other form of content
        wrapper for objects outside of STIX content.
    versions:
      type: object
      properties:
        more:
          type: boolean
          description: This property identifies if there is more content available
            based on the search criteria. The absence of this property means the value
            is false​.
          nullable: true
        versions:
          uniqueItems: true
          type: array
          description: The list of object versions returned by the request. If there
            are no versions returned, this key ​MUST​ be omitted, and the response
            is an empty object.
          items:
            $ref: '#/components/schemas/Timestamp'
      description: The ​versions​ resource is a simple wrapper around a list of versions.
    discovery:
      type: object
      properties:
        title:
          type: string
          description: A human readable plain text name used to identify this server.
        description:
          type: string
          description: A human readable plain text description for this server.
          nullable: true
        contact:
          type: string
          description: The human readable plain text contact information for this
            server and/or the administrator of this server.
          nullable: true
        default:
          type: string
          nullable: true
        api_roots:
          type: array
          description: A list of URLs that identify known API Roots. This list MAY​
            be filtered on a per-client basis.  API Root URLs ​MUST​ be HTTPS absolute
            URLs or relative URLs. API Root relative URLs ​MUST​ begin with a single
            "/" character and ​MUST​ N​ OT​ begin with "//" or "../". API Root URLs
            ​MUST NOT​ contain a URL query component.
          nullable: true
          items:
            type: string
      description: The ​discovery​ resource contains information about a TAXII Server,
        such as a human-readable ​title​, description​, and ​contact​ information,
        as well as a list of API Roots that it is advertising. It also has an indication
        of which API Root it considers the ​default​, or the one to use in the absence
        of another information/user choice.
  securitySchemes:
    basicAuth:
      type: http
      description: Basic Authentication
      scheme: basic
